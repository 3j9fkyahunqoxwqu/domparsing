<!DOCTYPE html><meta charset=UTF-8>
<title>DOM Parsing and Serialization</title>
<link href=http://www.whatwg.org/style/specification rel=stylesheet>
<style>
 pre, code { font-family:monospace, sans-serif; }
 h2 code, h3 code, h4 code,
 h2 :link, h3 :link, h4 :link,
 h2 :visited, h3 :visited, h4 :visited
 { font:inherit; color:inherit; font-style:italic; }
 @media print {
   [data-anolis-spec]::after {
     content: "[" attr(data-anolis-spec) "]";
     font-size: 0.6em;
     vertical-align: super;
     text-transform: uppercase;
   }
 }
</style>
<body class=draft>
<div class=head id=head>
<h1>DOM Parsing and Serialization</h1>
<h2 class="no-num no-toc" id=work-in-progress-&mdash;-last-update-11-november-2010>Work in Progress &mdash; Last Update 11 November 2010</h2>
<dl>
 <dt>Editor
 <dd>Ms2ger &lt;ms2ger@gmail.com&gt;

 <dt>Version history
 <dd><a href=http://bitbucket.org/ms2ger/dom-parsing-and-serialization/>http://bitbucket.org/ms2ger/dom-parsing-and-serialization</a>
</dl>
</div>



<h2 class="no-num no-toc" id=abstract>Abstract</h2>
<p>



<h2 class="no-num no-toc" id=table-of-contents>Table of contents</h2>

<!--begin-toc-->
<ol class=toc>
 <li><a href=#common-infrastructure><span class=secno>1 </span>Common infrastructure</a>
  <ol>
   <li><a href=#terminology><span class=secno>1.1 </span>Terminology</a></li>
   <li><a href=#conformance-requirements><span class=secno>1.2 </span>Conformance requirements</a>
    <ol>
     <li><a href=#dependencies><span class=secno>1.2.1 </span>Dependencies</a></li>
     <li><a href=#extensibility><span class=secno>1.2.2 </span>Extensibility</a></ol></ol></li>
 <li><a href=#the-domparser-interface><span class=secno>2 </span>The <code>DOMParser</code> interface</a></li>
 <li><a href=#the-xmlserializer-interface><span class=secno>3 </span>The <code>XMLSerializer</code> interface</a></li>
 <li><a href=#extensions-to-the-element-interface><span class=secno>4 </span>Extensions to the <code class=external data-anolis-spec=domcore>Element</code> interface</a>
  <ol>
   <li><a href=#innerhtml><span class=secno>4.1 </span><code title=dom-Element-innerHTML>innerHTML</code></a></li>
   <li><a href=#outerhtml><span class=secno>4.2 </span><code title=dom-Element-outerHTML>outerHTML</code></a></li>
   <li><a href=#insertadjacenthtml()><span class=secno>4.3 </span><code title=dom-Element-insertAdjacentHTML>insertAdjacentHTML()</code></a></ol></li>
 <li><a href=#extensions-to-the-range-interface><span class=secno>5 </span>Extensions to the <code class=external data-anolis-spec=domrange>Range</code> interface</a></li>
 <li><a class=no-num href=#references>References</a></li>
 <li><a class=no-num href=#acknowledgements>Acknowledgements</a></ol>
<!--end-toc-->



<h2 id=common-infrastructure><span class=secno>1 </span>Common infrastructure</h2>
<h3 id=terminology><span class=secno>1.1 </span>Terminology</h3>
<p>The term <dfn id=context-object>context object</dfn> means the object on which the method or
attribute being discussed was called.


<h3 id=conformance-requirements><span class=secno>1.2 </span>Conformance requirements</h3>
<p>All diagrams, examples, and notes in this specification are
non-normative, as are all sections explicitly marked non-normative.
Everything else in this specification is normative.</p>

<p>The key words "MUST", "MUST NOT", "REQUIRED", <!--"SHALL", "SHALL
NOT",--> "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and
"OPTIONAL" in the normative parts of this document are to be
interpreted as described in RFC2119. For readability, these words do
not appear in all uppercase letters in this specification. <a data-anolis-ref="" href=#refsRFC2119>[RFC2119]</a></p>

<p>Requirements phrased in the imperative as part of algorithms
(such as "strip any leading space characters" or "return false and
abort these steps") are to be interpreted with the meaning of the
key word ("must", "should", "may", etc) used in introducing the
algorithm.</p>

<p>Conformance requirements phrased as algorithms or specific steps
may be implemented in any manner, so long as the end result is
equivalent. (In particular, the algorithms defined in this
specification are intended to be easy to follow, and not intended to
be performant.)</p>

<p id=hardwareLimitations>User agents may impose
implementation-specific limits on otherwise unconstrained inputs,
e.g. to prevent denial of service attacks, to guard against running
out of memory, or to work around platform-specific limitations.</p>

<p>When a method or an attribute is said to call another method or attribute, the user agent must invoke its internal API for that attribute or method so that e.g. the author can't change the behavior by overriding attributes or methods with custom properties or functions in ECMAScript.

<p>Unless otherwise stated, string comparisons are done in a <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#case-sensitive>case-sensitive</a> manner.

<h4 id=dependencies><span class=secno>1.2.1 </span>Dependencies</h4>

<p>The IDL fragments in this specification must be interpreted as
required for conforming IDL fragments, as described in the Web IDL
specification. <a data-anolis-ref="" href=#refsWEBIDL>[WEBIDL]</a>

<p>Some of the terms used in this specification are defined in <cite>DOM
Core</cite>, <cite>DOM Range</cite> and <cite>HTML</cite>.
<a data-anolis-ref="" href=#refsDOMCORE>[DOMCORE]</a>
<a data-anolis-ref="" href=#refsDOMRANGE>[DOMRANGE]</a>
<a data-anolis-ref="" href=#refsHTML>[HTML]</a>

<h4 id=extensibility><span class=secno>1.2.2 </span>Extensibility</h4>

<p>Vendor-specific proprietary extensions to this specification are
strongly discouraged. Authors must not use such extensions, as
doing so reduces interoperability and fragments the user base,
allowing only users of specific user agents to access the content in
question.</p>

<p>If vendor-specific extensions are needed, the members should be
prefixed by vendor-specific strings to prevent clashes with future
versions of this specification. Extensions must be defined so that
the use of extensions neither contradicts nor causes the
non-conformance of functionality defined in the specification.</p>
<!-- thanks to QA Framework -->

<p>When vendor-neutral extensions to this specification are needed,
either this specification can be updated accordingly, or an
extension specification can be written that overrides the
requirements in this specification. When someone applying this
specification to their activities decides that they will recognise
the requirements of such an extension specification, it becomes an
<dfn id=other-applicable-specifications title="other applicable specifications">applicable
specification</dfn> for the purposes of conformance requirements in
this specification.</p>
<!-- http://www.w3.org/mid/17E341CD-E790-422C-9F9A-69347EE01CEB@iki.fi -->



<h2 id=the-domparser-interface><span class=secno>2 </span>The <a href=#domparser><code>DOMParser</code></a> interface</h2>
<pre class=idl>interface <dfn id=xmldocument>XMLDocument</dfn> : <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document>Document</a> {
};

[Constructor]
interface <dfn id=domparser>DOMParser</dfn> {
  <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document>Document</a> <a href=#dom-domparser-parsefromstring title=dom-DOMParser-parseFromString>parseFromString</a>(DOMString str, DOMString contentType);
};</pre>

<p>The <dfn id=dom-domparser-parsefromstring title=dom-DOMParser-parseFromString><code>parseFromString(<var title="">str</var>, <var title="">contentType</var>)</code></dfn> method must run the
following steps:
<ol>
 <li><p>If <var title="">contentType</var> isn't <code title="">text/xml</code>, <code title="">application/xml</code> or <code title="">application/xhtml+xml</code>, raise
 a <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-not_supported_err><code class=external data-anolis-spec=domcore title=dom-DOMException-NOT_SUPPORTED_ERR>NOT_SUPPORTED_ERR</code></a> exception and abort these
 steps.

 <li><p>Parse <var title="">str</var> with a namespace-enabled <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-parser>XML parser</a>.

 <li>
  <p>If the previous step didn't return an error, return the newly created
  <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document><code class=external data-anolis-spec=domcore>Document</code></a>.

  <p>Otherwise, let <var title="">document</var> a newly-created
  <a href=#xmldocument><code>XMLDocument</code></a> node. Append an <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> node to it, with its <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-localname><code class=external data-anolis-spec=domcore title=dom-Node-localName>localName</code></a> set to
  <code title="">parsererror</code> and its <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-namespaceuri><code class=external data-anolis-spec=domcore title=dom-Node-namespaceURI>namespaceURI</code></a> set to <code title="">http://www.mozilla.org/newlayout/xml/parsererror.xml</code>. User agents
  may append nodes to this element, for example to describe the nature of the
  error.
</ol>



<h2 id=the-xmlserializer-interface><span class=secno>3 </span>The <a href=#xmlserializer><code>XMLSerializer</code></a> interface</h2>
<pre class=idl>[Constructor]
interface <dfn id=xmlserializer>XMLSerializer</dfn> {
  DOMString <a href=#dom-xmlserializer-serializetostring title=dom-XMLSerializer-serializeToString>serializeToString</a>(<a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#node>Node</a> root);
};</pre>

<p>The
<dfn id=dom-xmlserializer-serializetostring title=dom-XMLSerializer-serializeToString><code>serializeToString(<var title="">root</var>)</code></dfn> method must return the result of running the
<a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-serialization-algorithm>XML fragment serialization algorithm</a> on
<var title="">root</var> (this might raise an exception instead of returning a
string).



<h2 id=extensions-to-the-element-interface><span class=secno>4 </span>Extensions to the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> interface</h2>

<pre class=idl>[Supplemental]
interface <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element>Element</a> {
  attribute DOMString <a href=#dom-element-innerhtml title=dom-Element-innerHTML>innerHTML</a>;
  attribute DOMString <a href=#dom-element-outerhtml title=dom-Element-outerHTML>outerHTML</a>;
  void <a href=#dom-element-insertadjacenthtml title=dom-Element-insertAdjacentHTML>insertAdjacentHTML</a>(DOMString position, DOMString text);
};</pre>


<h3 id=innerhtml><span class=secno>4.1 </span><a href=#dom-element-innerhtml><code title=dom-Element-innerHTML>innerHTML</code></a></h3>
<p>The <dfn id=dom-element-innerhtml title=dom-Element-innerHTML><code>innerHTML</code></dfn> IDL
attribute represents the markup of the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s contents.

<dl class=domintro>
  <!--doc.ih
  <dt><var title>document</var> . <code title=dom-Document-innerHTML>innerHTML</code> [ = <var title>value</var> ]
  <dd>
    <p>Returns a fragment of HTML or XML that represents the
    <code data-anolis-spec=domcore>Document</code>.

    <p>Can be set, to replace the
    <code data-anolis-spec=domcore>Document</code>'s contents with the result of
    parsing the given string.

    <p>In the case of an <span data-anolis-spec=domcore>XML document</span>,
    will throw an
    <code data-anolis-spec=domcore title=dom-DOMException-INVALID_STATE_ERR>INVALID_STATE_ERR</code>
    if the <code data-anolis-spec=domcore>Document</code> cannot be serialized
    to XML, and a
    <code data-anolis-spec=domcore title=dom-DOMException-SYNTAX_ERR>SYNTAX_ERR</code>
    if the given string is not well-formed.
  -->

  <dt><var title="">element</var> . <a href=#dom-element-innerhtml><code title=dom-Element-innerHTML>innerHTML</code></a> [ = <var title="">value</var> ]
  <dd>
    <p>Returns a fragment of HTML or XML that represents the element's
    contents.

    <p>Can be set, to replace the contents of the element with nodes
    parsed from the given string.

    <p>In the case of an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>,
    will throw an
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-invalid_state_err><code class=external data-anolis-spec=domcore title=dom-DOMException-INVALID_STATE_ERR>INVALID_STATE_ERR</code></a>
    if the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> cannot be serialized
    to XML, and a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-syntax_err><code class=external data-anolis-spec=domcore title=dom-DOMException-SYNTAX_ERR>SYNTAX_ERR</code></a>
    if the given string is not well-formed.
</dl>

<div class=impl>

<p>On getting, if the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>, then the attribute
must return the result of running the
<a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-serialization-algorithm>HTML fragment serialization algorithm</a> on the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>; otherwise, the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>, and the attribute must
return the result of running the
<a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-serialization-algorithm>XML fragment serialization algorithm</a> on the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> instead (this might raise an
exception instead of returning a string).

<p>On setting, the following steps must be run:

<ol>
  <li>
    <p>If the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-parsing-algorithm>HTML fragment parsing algorithm</a>.

    <p>If the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-parsing-algorithm>XML fragment parsing algorithm</a>.

    <p>In either case, the algorithm must be invoked with the given value as the
    <var title="">input</var>, and the <a href=#context-object>context object</a> as the
    <var title="">context</var> element.
    <!--doc.ih
    If the node is an <code data-anolis-spec=domcore>Element</code>
    node, then, in addition, that element must be passed as the <var
    title="">context</var> element.
    -->

    <p>If this raises an exception, then abort these steps.

    <p>Otherwise, let <var title="">new children</var> be the nodes returned.

  <!--doc.ih
  <li>
    <p>If the attribute is being set on a <code>Document</code> node,
    and that document has an <span>active parser</span>, then abort
    that parser.
  -->

  <li>
    <p>Remove the child nodes of the <a href=#context-object>context object</a>, firing
    appropriate mutation events.

  <li>
    <p>
    <!--doc.ih
    If the attribute is being set on a <code>Document</code> node,
    let <var title>target document</var> be that
    <code>Document</code> node. Otherwise, the attribute is being set
    on an <code>Element</code> node;
    -->
    Let <var title="">target document</var> be the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>.

  <li>
    <p>Set the
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    of all the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#node><code class=external data-anolis-spec=domcore>Node</code></a>s in
    <var title="">new children</var> to the <var title="">target document</var>.

  <li>
    <p>Append all the <var title="">new children</var> nodes to the
    <a href=#context-object>context object</a>, preserving their order, and firing mutation
    events as if a <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a>
    containing the <var title="">new children</var> had been inserted.
</ol>

</div>


<h3 id=outerhtml><span class=secno>4.2 </span><a href=#dom-element-outerhtml><code title=dom-Element-outerHTML>outerHTML</code></a></h3>

<p>The <dfn id=dom-element-outerhtml title=dom-Element-outerHTML><code>outerHTML</code></dfn> IDL
attribute represents the markup of the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> and its contents.

<dl class=domintro>
  <dt><var title="">element</var> . <a href=#dom-element-outerhtml><code title=dom-Element-outerHTML>outerHTML</code></a> [ = <var title="">value</var> ]
  <dd>
    <p>Returns a fragment of HTML or XML that represents the element and its
    contents.

    <p>Can be set, to replace the element with nodes parsed from the given
    string.

    <p>In the case of an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>,
    will throw an
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-invalid_state_err><code class=external data-anolis-spec=domcore title=dom-DOMException-INVALID_STATE_ERR>INVALID_STATE_ERR</code></a>
    if the element cannot be serialized to XML, and a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-syntax_err><code class=external data-anolis-spec=domcore title=dom-DOMException-SYNTAX_ERR>SYNTAX_ERR</code></a>
    if the given string is not well-formed.

    <p>Throws a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-no_modification_allowed_err><code class=external data-anolis-spec=domcore title=dom-DOMException-NO_MODIFICATION_ALLOWED_ERR>NO_MODIFICATION_ALLOWED_ERR</code></a>
    exception if the parent of the element is the
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document><code class=external data-anolis-spec=domcore>Document</code></a> node.
</dl>

<div class=impl>

<p>On getting, if the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>, then the attribute
must return the result of running the
<a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-serialization-algorithm>HTML fragment serialization algorithm</a> on a
fictional node whose only child is <a href=#context-object>context object</a>; otherwise, the
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a>'s
<a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>, and the attribute must
return the result of running the
<a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-serialization-algorithm>XML fragment serialization algorithm</a> on that
fictional node instead (this might raise an exception instead of returning a
string).

<p>On setting, the following steps must be run:

<ol>
  <li>
    <p>Let <var title="">parent</var> be the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-parentnode><code class=external data-anolis-spec=domcore title=dom-Node-parentNode>parentNode</code></a>.

  <li>
    <p>If <var title="">parent</var> is null, abort these steps. There would be no
    way to obtain a reference to the nodes created even if the remaining steps
    were run.

  <li>
    <p>If <var title="">parent</var> is a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document><code class=external data-anolis-spec=domcore>Document</code></a> object, throw a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-no_modification_allowed_err><code class=external data-anolis-spec=domcore title=dom-DOMException-NO_MODIFICATION_ALLOWED_ERR>NO_MODIFICATION_ALLOWED_ERR</code></a>
    exception and abort these steps.

  <li>
    <p>If <var title="">parent</var> is a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a> node, let
    <var title="">parent</var> be a new with <code title="">body</code> as its
    <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-local-name title=concept-element-local-name>local name</a>
    and the <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-namespace>HTML namespace</a> as its
    <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-namespace title=concept-element-namespace>namespace</a>.

  <li>
    <p>If the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-parsing-algorithm>HTML fragment parsing algorithm</a>.

    <p>If the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-parsing-algorithm>XML fragment parsing algorithm</a>.

    <p>In either case, the algorithm must be invoked with the string being
    assigned into the <a href=#dom-element-outerhtml><code title=dom-Element-outerHTML>outerHTML</code></a>
    attribute as the <var title="">input</var>, and <var title="">parent</var> as the
    <var title="">context</var> element.

    <p>If this raises an exception, then abort these steps.

    <p>Otherwise, let <var title="">new children</var> be the nodes returned.

  <li>
    <p>Set the
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    of all the nodes in <var title="">new children</var> to the
    <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>.

  <li>
    <p>Remove the <a href=#context-object>context object</a> from its parent node, firing
    mutation events as appropriate, and then insert in its place all the
    <var title="">new children</var> nodes, preserving their order, and again
    firing mutation events as if a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a> containing the
    <var title="">new children</var> had been inserted.
</ol>

</div>
 
 
<h3 id=insertadjacenthtml()><span class=secno>4.3 </span><a href=#dom-element-insertadjacenthtml><code title=dom-Element-insertAdjacentHTML>insertAdjacentHTML()</code></a></h3>

<dl class=domintro>
  <dt><var title="">element</var> . <a href=#dom-element-insertadjacenthtml><code title=dom-Element-insertAdjacentHTML>insertAdjacentHTML</code></a>(<var title="">position</var>, <var title="">text</var>)

  <dd>
    <p>Parses the given string <var title="">text</var> as HTML or XML and inserts
    the resulting nodes into the tree in the position given by the
    <var title="">position</var> argument, as follows:

    <dl class=switch>
      <dt>"beforebegin"
      <dd>Before the element itself.

      <dt>"afterbegin"
      <dd>Just inside the element, before its first child.

      <dt>"beforeend"
      <dd>Just inside the element, after its last child.

      <dt>"afterend"
      <dd>After the element itself.
    </dl>

    <p>Throws a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-syntax_err><code class=external data-anolis-spec=domcore title=dom-DOMException-SYNTAX_ERR>SYNTAX_ERR</code></a>
    exception if the arguments have invalid values (e.g., in the case of an
    <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>, if the given string is
    not well-formed).

    <p>Throws a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-no_modification_allowed_err><code class=external data-anolis-spec=domcore title=dom-DOMException-NO_MODIFICATION_ALLOWED_ERR>NO_MODIFICATION_ALLOWED_ERR</code></a>
    exception if the given position isn't possible (e.g. inserting elements
    after the root element of a <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document><code class=external data-anolis-spec=domcore>Document</code></a>).
</dl>

<div class=impl>

<p>The
<dfn id=dom-element-insertadjacenthtml title=dom-Element-insertAdjacentHTML><code>insertAdjacentHTML(<var title="">position</var>, <var title="">text</var>)</code></dfn>
method, when invoked, must run the following algorithm:

<ol>
  <li>
    <p>Use the first matching item from this list:

    <dl class=switch>
      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "beforebegin"
      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "afterend"
      <dd>
        <p>Let <var title="">context</var> be the <a href=#context-object>context object</a>'s
        <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-parentnode><code class=external data-anolis-spec=domcore title=dom-Node-parentNode>parentNode</code></a>.

        <p>If <var title="">context</var> is null, abort these steps.

        <p>If <var title="">context</var> is a
        <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#document><code class=external data-anolis-spec=domcore>Document</code></a> object, throw a
        <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-no_modification_allowed_err><code class=external data-anolis-spec=domcore title=dom-DOMException-NO_MODIFICATION_ALLOWED_ERR>NO_MODIFICATION_ALLOWED_ERR</code></a>
        exception and abort these steps.

      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "afterbegin"
      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "beforeend"
      <dd>
        <p>Let <var title="">context</var> be the <a href=#context-object>context object</a>.

      <dt>Otherwise
      <dd>
        <p>Throw a
        <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-syntax_err><code class=external data-anolis-spec=domcore title=dom-DOMException-SYNTAX_ERR>SYNTAX_ERR</code></a>
        exception.
    </dl>

  <li>
    <p>If the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-parsing-algorithm>HTML fragment parsing algorithm</a>.

    <p>If the <a href=#context-object>context object</a>'s
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML document</a>: Invoke the
    <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-parsing-algorithm>XML fragment parsing algorithm</a>.

    <p>In either case, the algorithm must be invoked with <var title="">text</var>
    as the <var title="">input</var>, and <var title="">context</var> as the
    <var title="">context</var> element.

    <p>If this raises an exception, then abort these steps.

    <p>Otherwise, let <var title="">new children</var> be the nodes
    returned.

  <li>
    <p>Set the
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
    of all the <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#node><code class=external data-anolis-spec=domcore>Node</code></a>s in
    <var title="">new children</var> to the <var title="">target document</var>.

  <li>
    <p>Use the first matching item from this list:

    <dl class=switch>
      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "beforebegin"
      <dd>
        <p>Insert all the <var title="">new children</var> nodes immediately before
        the <a href=#context-object>context object</a>.

      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "afterbegin"
      <dd>
        <p>Insert all the <var title="">new children</var> nodes before the first
        child of the <a href=#context-object>context object</a>, if there is one. If there is
        no such child, append them all to the <a href=#context-object>context object</a>.

      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "beforeend"
      <dd>
        <p>Append all the <var title="">new children</var> nodes to the
        <a href=#context-object>context object</a>.

      <dt>If <var title="">position</var> is an
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#ascii-case-insensitive>ASCII case-insensitive</a> match for
      the string "afterend"
      <dd>
        <p>Insert all the <var title="">new children</var> nodes immediately after
        the <a href=#context-object>context object</a>.
    </dl>

    <p>The <var title="">new children</var> nodes must be inserted in a manner that
    preserves their order and fires mutation events as if a
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a> containing the
    <var title="">new children</var> had been inserted.
</ol>

</div>



<h2 id=extensions-to-the-range-interface><span class=secno>5 </span>Extensions to the <a href=http://html5.org/specs/dom-range.html#range><code class=external data-anolis-spec=domrange>Range</code></a> interface</h2>

<pre class=idl>[Supplemental]
interface <a class=external data-anolis-spec=domrange href=http://html5.org/specs/dom-range.html#range>Range</a> {
  <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment>DocumentFragment</a> <a href=#dom-range-createcontextualfragment title=dom-Range-createContextualFragment>createContextualFragment</a>(DOMString fragment);
};</pre>

<dl class=domintro>
  <dt><var title="">fragment</var> = <var title="">range</var> . <a href=#dom-range-createcontextualfragment><code title=dom-Range-createContextualFragment>createContextualFragment</code></a>(<var title="">fragment</var>)
  <dd>
    <p>Returns a <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a>, created
    from the markup string given.
</dl>

<div class=impl>

<p>The
<dfn id=dom-range-createcontextualfragment title=dom-Range-createContextualFragment><code>createContextualFragment(<var title="">fragment</var>)</code></dfn>
method must run the following steps:

<ol>
  <li>If the <a href=#context-object>context object</a>'s
  <a class=external data-anolis-spec=domrange href=http://html5.org/specs/dom-range.html#concept-range-start title=concept-range-start>start's</a>
  <a href=http://html5.org/specs/dom-range.html#concept-boundary-point-node><var class=external data-anolis-spec=domrange title=concept-boundary-point-node>node</var></a> is
  null, raise an
  <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domexception-invalid_state_err><code class=external data-anolis-spec=domcore title=dom-DOMException-INVALID_STATE_ERR>INVALID_STATE_ERR</code></a>
  exception and abort these steps.

  <li>
    <p>Let <var title="">element</var> the <a href=#context-object>context object</a>'s
    <a class=external data-anolis-spec=domrange href=http://html5.org/specs/dom-range.html#concept-range-start title=concept-range-start>start's</a>
    <a href=http://html5.org/specs/dom-range.html#concept-boundary-point-node><var class=external data-anolis-spec=domrange title=concept-boundary-point-node>node</var></a>.

    <p>If the following are all true:

    <ul>
      <li><var title="">element</var>'s
      <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
      is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML document</a>,

      <li><var title="">element</var>'s
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-local-name title=concept-element-local-name>local name</a>
      is "<code title="">html</code>", and

      <li><var title="">element</var>'s
      <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-namespace title=concept-element-namespace>namespace</a>
      is the <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-namespace>HTML namespace</a>;
    </ul>

    <p>let <var title="">element</var> be a new
    <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element><code class=external data-anolis-spec=domcore>Element</code></a> with "<code title="">body</code>"
    as its
    <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-local-name title=concept-element-local-name>local name</a>
    and the <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-namespace>HTML namespace</a> as its
    <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-element-namespace title=concept-element-namespace>namespace</a>.

  <li>
    <p>If the node's document is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#html-document>HTML
    document</a>: Invoke the <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#html-fragment-parsing-algorithm>HTML fragment
    parsing algorithm</a>.

    <p>If the node's document is an <a class=external data-anolis-spec=domcore href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#xml-document>XML
    document</a>: Invoke the <a class=external data-anolis-spec=html href=http://www.whatwg.org/html/#xml-fragment-parsing-algorithm>XML fragment parsing
    algorithm</a>.

    <p>In either case, the algorithm must be invoked with
    <var title="">fragment</var> as the <var title="">input</var> and
    <var title="">element</var> as the <var title="">context</var> element.

  <li>If this raises an exception, then abort these steps. Otherwise, let <var title="">new children</var> be the nodes returned.

  <li>Set the
  <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>
  of all the nodes in <var title="">new children</var> to the
  <a href=#context-object>context object</a>'s
  <a class=external data-anolis-spec=domrange href=http://html5.org/specs/dom-range.html#concept-range-root title=concept-range-root>root's</a>
  <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-ownerdocument><code class=external data-anolis-spec=domcore title=dom-Node-ownerDocument>ownerDocument</code></a>.

  <li>Let <var title="">fragment</var> be a new
  <a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#documentfragment><code class=external data-anolis-spec=domcore>DocumentFragment</code></a> and append all
  <var title="">new children</var> to it.

  <li>Return <var title="">fragment</var>.
</ol>

</div>



<h2 class=no-num id=references>References</h2>
<p>All references are normative unless marked "Non-normative".</p>

<div id=anolis-references><dl><dt id=refsDOMCORE>[DOMCORE]
<dd><cite><a href=http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html>Web DOM Core</a></cite>, A. van Kesteren. W3C.
<dt id=refsDOMRANGE>[DOMRANGE]
<dd><cite><a href=http://html5.org/specs/dom-range.html>DOM Range</a></cite>, Ms2ger. WHATWG.
<dt id=refsHTML>[HTML]
<dd><cite><a href=http://www.whatwg.org/specs/web-apps/current-work/multipage>HTML</a></cite>, I. Hickson. WHATWG.
<dt id=refsRFC2119>[RFC2119]
<dd><cite><a href=http://www.ietf.org/rfc/rfc2119.txt>Key words for use in RFCs to Indicate Requirement Levels</a></cite>, S. Bradner. IETF.
<dt id=refsWEBIDL>[WEBIDL]
<dd><cite><a href=http://dev.w3.org/2006/webapi/WebIDL/>Web IDL</a></cite>, C. McCormack and S. Weinig. W3C.
</dl></div>



<h2 class=no-num id=acknowledgements>Acknowledgements</h2>
<p>Thanks to

Henri Sivonen

for their useful comments.

<p>Special thanks to Ian Hickson for defining the
<a href=#dom-element-innerhtml><code title=dom-Element-innerHTML>innerHTML</code></a> and
<a href=#dom-element-outerhtml><code title=dom-Element-outerHTML>outerHTML</code></a> attributes, and the
<a href=#dom-element-insertadjacenthtml><code title=dom-Element-insertAdjacentHTML>insertAdjacentHTML()</code></a> method in
<cite>HTML</cite>.
<a class=informative data-anolis-ref="" href=#refsHTML>[HTML]</a>


<script src=http://www.whatwg.org/specs/web-apps/current-work/dfn.js></script>
